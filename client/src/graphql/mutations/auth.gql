type User {
  _id: ID!
  name: String!
  email: String!
  avatar: String!
  password: String!
}

type AuthData {
  user: User!
  token: String!
  isAuth: Boolean!
}

input UserInput {
  name: String!
  email: String!
  password: String!
  avatar: String!
}

mutation Login($email: String!, $password: String!) {
  login(email: $email, password: $password) {
    user {
      _id
      name
      email
      avatar
      password
    }
    token
  }
}

mutation Register($userInput: UserInput!) {
  createUser(userInput: $userInput) {
    _id
    name
    email
    avatar
  }
}

type MutationResponse {
  code: Int!
  success: Boolean!
  message: String!
}

mutation verifyCode($email: String!, $code: String!) {
  verifyCode(email: $email, code: $code) {
    code
    success
    message
  }
}

type Mutation {
  login(email: String!, password: String!): AuthData!
  createUser(userInput: UserInput!): User!
  verifyCode(email: String!, code: String!): MutationResponse!
}
